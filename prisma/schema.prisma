// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider = "prisma-zod-generator"
}

enum SourceType {
  USER
  BOARD
  TEAM
}

enum SnippetStatus {
  DRAFT
  PUBLISHED
}

enum SnippetVisibility {
  PRIVATE
  PROTECTED
  PUBLIC
}

model Source {
  id          String        @id @default(cuid())
  userId      String
  boardId     String
  teamId      String
  createdAt   DateTime      @default(now())
  Snippet     Snippet[]
  ShareConfig ShareConfig[]

  @@unique([userId, boardId, teamId])
}

model ShareConfig {
  id         String     @id @default(cuid())
  sourceType SourceType @default(USER)
  identifier String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  snippet    Snippet    @relation(fields: [snippetId], references: [id], onDelete: Cascade)
  snippetId  String
  createdBy  Source     @relation(fields: [sourceId], references: [id])
  sourceId   String
}

model Predicate {
  id        String   @id @default(cuid())
  predicate Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  snippet   Snippet  @relation(fields: [snippetId], references: [id], onDelete: Cascade)
  snippetId String
}

model Snippet {
  id          String            @id @default(cuid())
  name        String
  code        String
  createdBy   Source            @relation(fields: [sourceId], references: [id])
  sourceId    String
  ShareConfig ShareConfig[]
  Predicate   Predicate[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  icon        String
  status      SnippetStatus     @default(DRAFT)
  visibility  SnippetVisibility @default(PRIVATE)
}
